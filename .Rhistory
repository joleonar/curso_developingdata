library(xslx)
library(xlsx)
0.75*.3
(1-0.52)*0.7
.225/(.336+.225)
nosim <- 1000
n <- 10
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
matrix(rnorm(nosim*n),nosim),1,mean)
matrix(rnorm(nosim*n),nosim)
nosim <- 1000
n <- 20
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
nosim <- 10000
n <- 20
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
runif(2)
runif(3)
nosim <- 1000
n <- 10
matrix(rnorm(nosim*n),nosim)
dim(matrix(rnorm(nosim*n),nosim))
dim(matrix(rnorm(nosim*n),nosim))
matrix(rnorm(nosim*n),nosim)
?runif
rnorm(10)
pnorm(10)
pnorm(0.1)
pnorm(0)
pnorm(2)
pnorm(1)
time <- seq(0,72,12)
betagal.abs <- c(0.05,0.18,0.25,0.31,0.32,0.34,0.35)
cell.density <- c(0,1000,2000,3000,4000,5000,6000)
time
par(mar=c(5, 4, 4, 6) + 0.1)
plot(time, betagal.abs, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Mike's test data")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Beta Gal Absorbance",side=2,line=2.5)
box()
plot(time, cell.density, pch=15,  xlab="", ylab="", ylim=c(0,7000),
axes=FALSE, type="b", col="red")
## a little farther out (line=4) to make room for labels
mtext("Cell Density",side=4,col="red",line=4)
axis(4, ylim=c(0,7000), col="red",col.axis="red",las=1)
plot(time, betagal.abs, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Mike's test data")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Beta Gal Absorbance",side=2,line=2.5)
box()
par(new=TRUE)
plot(time, cell.density, pch=15,  xlab="", ylab="", ylim=c(0,7000),
axes=FALSE, type="b", col="red")
## a little farther out (line=4) to make room for labels
mtext("Cell Density",side=4,col="red",line=4)
axis(4, ylim=c(0,7000), col="red",col.axis="red",las=1)
axis(1,pretty(range(time),10))
mtext("Time (Hours)",side=1,col="black",line=2.5)
legend("topleft",legend=c("Beta Gal","Cell Density"),
text.col=c("black","red"),pch=c(16,15),col=c("black","red"))
set.seed(101)
x <- 1:10
y <- rnorm(10)
## second data set on a very different scale
z <- runif(10, min=1000, max=10000)
par(mar = c(5, 4, 4, 4) + 0.3)  # Leave space for z axis
plot(x, y) # first plot
par(new = TRUE)
plot(x, z, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(z)))
mtext("z", side=4, line=3)set.seed(101)
x <- 1:10
y <- rnorm(10)
## second data set on a very different scale
z <- runif(10, min=1000, max=10000)
par(mar = c(5, 4, 4, 4) + 0.3)  # Leave space for z axis
plot(x, y) # first plot
par(new = TRUE)
plot(x, z, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(z)))
mtext("z", side=4, line=3)
time <- seq(0,72,12)
betagal.abs <- c(0.05,0.18,0.25,0.31,0.32,0.34,0.35)
cell.density <- c(0,1000,2000,3000,4000,5000,6000)
## add extra space to right margin of plot within frame
par(mar=c(5, 4, 4, 6) + 0.1)
## Plot first set of data and draw its axis
plot(time, betagal.abs, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Mike's test data")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Beta Gal Absorbance",side=2,line=2.5)
box()
## Allow a second plot on the same graph
par(new=TRUE)
## Plot the second plot and put axis scale on right
plot(time, cell.density, pch=15,  xlab="", ylab="", ylim=c(0,7000),
axes=FALSE, type="b", col="red")
## a little farther out (line=4) to make room for labels
mtext("Cell Density",side=4,col="red",line=4)
axis(4, ylim=c(0,7000), col="red",col.axis="red",las=1)
## Draw the time axis
axis(1,pretty(range(time),10))
mtext("Time (Hours)",side=1,col="black",line=2.5)
## Add Legend
legend("topleft",legend=c("Beta Gal","Cell Density"),
text.col=c("black","red"),pch=c(16,15),col=c("black","red"))
##Metodo I
## set up some fake test data
time <- seq(0,72,12)
betagal.abs <- c(0.05,0.18,0.25,0.31,0.32,0.34,0.35)
cell.density <- c(0,1000,2000,3000,4000,5000,6000)
## add extra space to right margin of plot within frame
par(mar=c(5, 4, 4, 6) + 0.1)
## Plot first set of data and draw its axis
plot(time, betagal.abs, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Mike's test data")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Beta Gal Absorbance",side=2,line=2.5)
box()
## Allow a second plot on the same graph
par(new=TRUE)
## Plot the second plot and put axis scale on right
plot(time, cell.density, pch=15,  xlab="", ylab="", ylim=c(0,7000),
axes=FALSE, type="b", col="red")
## a little farther out (line=4) to make room for labels
mtext("Cell Density",side=4,col="red",line=4)
axis(4, ylim=c(0,7000), col="red",col.axis="red",las=1)
## Draw the time axis
axis(1,pretty(range(time),10))
mtext("Time (Hours)",side=1,col="black",line=2.5)
## Add Legend
legend("topleft",legend=c("Beta Gal","Cell Density"),
text.col=c("black","red"),pch=c(16,15),col=c("black","red"))
##Metodo I
## set up some fake test data
time <- seq(0,72,12)
betagal.abs <- c(0.05,0.18,0.25,0.31,0.32,0.34,0.35)
cell.density <- c(0,1000,2000,3000,4000,5000,6000)
## add extra space to right margin of plot within frame
par(mar=c(5, 4, 4, 6) + 0.1)
## Plot first set of data and draw its axis
plot(time, betagal.abs, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Mike's test data")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Beta Gal Absorbance",side=2,line=2.5)
box()
## Allow a second plot on the same graph
par(new=TRUE)
## Plot the second plot and put axis scale on right
plot(time, cell.density, pch=15,  xlab="", ylab="", ylim=c(0,7000),
axes=FALSE, type="b", col="red")
time <- seq(0,72,12)
betagal.abs <- c(0.05,0.18,0.25,0.31,0.32,0.34,0.35)
cell.density <- c(0,1000,2000,3000,4000,5000,6000)
par(mar=c(5, 4, 4, 6) + 0.1)
plot(time, betagal.abs, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Mike's test data")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Beta Gal Absorbance",side=2,line=2.5)
box()
par(new=TRUE)
plot(time, cell.density, pch=15,  xlab="", ylab="", ylim=c(0,7000),
axes=FALSE, type="b", col="red")
set.seed(101)
x <- 1:10
y <- rnorm(10)
## second data set on a very different scale
z <- runif(10, min=1000, max=10000)
par(mar = c(5, 4, 4, 4) + 0.3)  # Leave space for z axis
plot(x, y) # first plot
par(new = TRUE)
plot(x, z, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(z)))
mtext("z", side=4, line=3)
5+43*60
43/60+5
60/5.71
dnorm(0)
pnorm(0)
pnorm(-3)
pnorm(-3)
1-pnorm(2)
qnorm(0.975)
qnorm(0.95)
54/60
60/2.9
dpois(1:10,5)
y<-dpois(1:10,5)
plot(y)
x=1:10
x
bar(x,y)
plotbar(x,y)
barplot(x,y)
barplot(y)
sum(y)
y<-dpois(1:20,5)
barplot(y)
sum(y)
10/1787*100
ppois(18,10)
ppois(10,18)
rnor(10)
rnorm(10)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1
plot(x1,y)
y=x1+x2 +x3+ rnorm(n,sd=0.1)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+ rnorm(n,sd=0.1)
plot(x1,y)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+ rnorm(n,sd=0.1)
plot(x1,y)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+ rnorm(n,sd=0.1)
plot(x1,y)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+ rnorm(n,sd=0.1)
plot(x1,y)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+ rnorm(n,sd=0.1)
plot(x1,y)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+ rnorm(n,sd=0.1)
plot(x1,y)
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+x2 rnorm(n,sd=0.1)
plot(x1,y)
e <- function(a,b) a-sum(a*b)/sum(b*b)*b
e(y,x2)
e(y,x2);e(x1,x2)
sum(e(y,x2)*e(x1,x2))
sum(e(y,x2)*e(x1,x2))/sum(e(x1,x2)^2)
sum(e(y,x2)*e(x1,x2))/sum(e(x1,x2)^2)
coef(lm(y~x1,x2-1))
coef(lm(y~x1+x2-1))
n <- 100; x1 <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n);
y=x1+x2+rnorm(n,sd=0.1)
plot(x1,y)
e <- function(a,b) a-sum(a*b)/sum(b*b)*b
sum(e(y,x2)*e(x1,x2))/sum(e(x1,x2)^2)
coef(lm(y~x1+x2-1))
beta1 <-sum(ex*ey)/sum(ex^2)
ey <- e(y,x2)
ex <- e(x1,x2))
sum(ex^2)
beta1 <-sum(ex*ey)/sum(ex^2)
ey <- e(y,x2)
ex <- e(x1,x2)
beta1 <-sum(ex*ey)/sum(ex^2)
beta1
ey1 <- e(y,x2)
ex <- e(x1,x2)
ey2 <- e(y,x1)
beta1 <-sum(ex*ey)/sum(ex^2)
beta2 <-sum(ex*ey2)/sum(ex^2)
beta2
coef(lm(y~x1+x2-1))
ey1 <- e(y,x2)
ex <- e(x1,x2)
ey2 <- e(y,x1)
beta1 <-sum(ex*ey1)/sum(ex^2)
beta2 <-sum(ex*ey2)/sum(ex^2)
beta1
beta2
ey1 <- e(y,x2)
ex1 <- e(x1,x2)
ex2 <- e(x2,x1)
ey2 <- e(y,x1)
beta1 <-sum(ex*ey1)/sum(ex1^2)
beta2 <-sum(ex2*ey2)/sum(ex2^2)
coef(lm(y~x1+x2-1))
beta2
data(InsectSprays)
InsectSprays
require(stats); require(graphics)
boxplot(count ~ spray, data = InsectSprays,
xlab = "Type of spray", ylab = "Insect count",
main = "InsectSprays data", varwidth = TRUE, col = "lightgray")
subset(InsectSprays,spray=="A")
I_a <- subset(InsectSprays,spray=="A")
I_a
median(I_a[,1])
I_a <- subset(InsectSprays,spray=="C")
median(I_a[,1])
I_a <- subset(InsectSprays,spray=="D")
median(I_a[,1])
I_a <- subset(InsectSprays,spray=="A")
median(I_a[,1])
mean(I_a[,1])
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(x,y)
hatvalues(lm(y~x))
hatvalues(lm(y~x))
influence(lm(y ~ x))$hat
?update
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
a
summary(fit1)
a <- summary(fit1)$cov.unscaled[2,2]
a
summary(fit1)$cov.unscaled
summary(fit1)
fit1
summary(fit1)
summary(fit1)$cov.unscaled
install.packages("shiny")
getwd()
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
setwd("~/Cursos_Coursera/DevelopinDataProducts/stockVis")
setwd("~/Cursos_Coursera/DevelopinDataProducts/stockVis/test")
```{r,results='hide'}
install_github('rstudio/shinyapps')
librry(devtools)
library(devtools)
install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='joleonar', token='15F00CA763D670530E8DBF6A915FD083', secret='VBcizhbxWFXRoGXD8tXsyAYe7TEh7jEhHa33Gnv6')
getwd()
shinyapps::deployApp()
getwd()
shiny::runApp('~/Cursos_Coursera/DevelopinDataProducts/stockVis')
setwd("~/Cursos_Coursera/DevelopinDataProducts/sismos_tiempo")
shiny::runApp('~/Cursos_Coursera/DevelopinDataProducts/stockVis')
shiny::runApp()
shiny::runApp()
shinyapps::setAccountInfo(name='joleonar', token='15F00CA763D670530E8DBF6A915FD083', secret='VBcizhbxWFXRoGXD8tXsyAYe7TEh7jEhHa33Gnv6')
library(shinyapps)
shinyapps::deployApp()
deployApp()
shiny::runApp()
library(ggplot2)
library(ggmap)
mapsismo <- get_map(location = c(lon = -67, lat = 7.5), zoom = 6,maptype = "terrain", scale = 2)
# plotting the map with some points on it
g <- ggmap(mapsismo)
print(g)
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?normalizePath
?normalizePath()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
